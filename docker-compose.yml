services:
  api:
    container_name: birthday.manager.api
    restart: always
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: src/BirthdayManager/Host/BirthdayManager.Host.Api/DockerFile
    environment:
      - ConnectionStrings__Postgres=Host=postgres;Port=5432;Database=BirthdayManager;UserId=postgres;Password=password
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8080:8080"

  postgres:
    container_name: birthday.manager.database
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: BirthdayManager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  
  migrations:
    container_name: birthday.manager.migrator
    build:
      context: .
      dockerfile: src/BirthdayManager/Host/BirthdayManager.Host.Migrator/DockerFile
    environment:
      - ConnectionStrings__Postgres=Host=postgres;Port=5432;Database=BirthdayManager;UserId=postgres;Password=password
    depends_on:
      postgres:
        condition: service_healthy
          
volumes:
  pg-data: